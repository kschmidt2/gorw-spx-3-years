let subhead=document.getElementsByClassName("chart-subhead"),headline=document.getElementById("chart-head");if(!headline)for(var i=0;i<subhead.length;i++)subhead[i].style.fontWeight="600";Highcharts.setOptions({lang:{thousandsSep:""}}),document.addEventListener("DOMContentLoaded",function(){setTimeout(function(){let e=document.getElementById("chart-container");if(e)console.log("yesId");else{console.log("noId");let e=document.getElementsByClassName("chart-area");for(var t=0;t<e.length;t++)e[t].style.display="none";document.getElementById("chart-fallback").innerHTML+='<img src="https://fm-static.cnbc.com/awsmedia/chart/2019/10/28/sp500-three-year-chart.1572292140075.png" style="width: 100%;max-width:660px">'}Highcharts.chart(e,{chart:{type:"line",styledMode:!0,spacingBottom:25,spacingRight:100},title:{text:null},data:{googleSpreadsheetKey:"1HMRyj3Xg0PeEqyMCSpcd-gJmMvILgUorWp6Pn8-10aU",endColumn:1},plotOptions:{series:{lineWidth:1,marker:{enabled:!1,symbol:"circle",fillColor:"#ffffff",states:{hover:{fillColor:"#ffffff"}}}}},legend:{enabled:!1},xAxis:{labels:{style:{whiteSpace:"nowrap"}},tickLength:5},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow"}},credits:{enabled:!1},tooltip:{shadow:!1,padding:10,valueDecimals:2},annotations:[{shapes:[{point:{x:1516994669e3,y:2872.86783924313,xAxis:0,yAxis:0},type:"circle",r:5},{point:{x:1537385069e3,y:2930.74615209949,xAxis:0,yAxis:0},type:"circle",r:5},{point:{x:1556652269e3,y:2945.83088684581,xAxis:0,yAxis:0},type:"circle",r:5},{point:{x:1564169069e3,y:3025.85914811883,xAxis:0,yAxis:0},type:"circle",r:5}]}],responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-18},tooltip:{enabled:!1}}}]}})},1e3)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
